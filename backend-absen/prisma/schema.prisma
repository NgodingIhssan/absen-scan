generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  KAPROG
  PEKERJA
}

model User {
  id          String  @id @default(uuid()) @db.Uuid()
  username    String  @unique @db.VarChar(50)
  email       String  @unique @db.VarChar(70)
  phone       String? @db.VarChar(20)
  password    String
  role        Role    @default(PEKERJA)
  status      String? @default("active") @db.VarChar(10)
  first_name  String
  last_name   String?
  created_at  Int     @default(dbgenerated("EXTRACT(EPOCH FROM now())"))
  updated_at  Int     @default(dbgenerated("EXTRACT(EPOCH FROM now())"))
  deleted_at  Int?

  transactions Transaction[]

  @@map("users") 
}

model Odtw {
  id         String @id @default(uuid()) @db.Uuid()
  name       String
  created_at Int    @default(dbgenerated("EXTRACT(EPOCH FROM now())"))
  updated_at Int    @default(dbgenerated("EXTRACT(EPOCH FROM now())"))
  deleted_at Int?
}

model Transaction {
  id         String  @id @default(uuid()) @db.Uuid()
  userId     String  @db.Uuid()
  amount     Float
  status     String? @db.VarChar(20)
  created_at Int     @default(dbgenerated("EXTRACT(EPOCH FROM now())"))
  updated_at Int     @default(dbgenerated("EXTRACT(EPOCH FROM now())"))
  deleted_at Int?

  user User @relation(fields: [userId], references: [id])

  @@map("transactions")
}

model Device {
  id         String @id @default(uuid()) @db.Uuid()
  name       String
  type       String?
  created_at Int    @default(dbgenerated("EXTRACT(EPOCH FROM now())"))
  updated_at Int    @default(dbgenerated("EXTRACT(EPOCH FROM now())"))
  deleted_at Int?

  @@map("devices")
}

model OpenTrip {
  id         String @id @default(uuid()) @db.Uuid()
  title      String
  location   String?
  date       Int
  created_at Int    @default(dbgenerated("EXTRACT(EPOCH FROM now())"))
  updated_at Int    @default(dbgenerated("EXTRACT(EPOCH FROM now())"))
  deleted_at Int?

  @@map("open_trips")
}

model Schedule {
  id         String @id @default(uuid()) @db.Uuid()
  title      String
  date       Int
  location   String?
  created_at Int    @default(dbgenerated("EXTRACT(EPOCH FROM now())"))
  updated_at Int    @default(dbgenerated("EXTRACT(EPOCH FROM now())"))
  deleted_at Int?
}
